{"version":3,"mappings":"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","names":["playground","queryTextarea","apiKeyInput","executeButton","clearButton","resultPre","query","apiKey","requestData","headers","endpointUrl","_a","response","data","errorMsg","error","textarea","lib","__vitePreload","schemaContainer","content","container","copyToClipboard","event","text","successMessage","showNotification","fallbackCopyToClipboard","textArea","successful","err","message","type","node","alertClass","alert","permissions","checkboxes","checkboxesFiltered","checkbox","selectAll","cb","copyButtons","button","value"],"ignoreList":[],"sources":["../assets-src/playground.js","../assets-src/utilities.js","../assets-src/permissions.js","../assets-src/rexql.js"],"sourcesContent":["export const playground = {\n  init: function () {\n    console.log('rexQL.playground.init()')\n    const queryTextarea = document.getElementById('graphql-query')\n    const apiKeyInput = document.getElementById('api-key-input')\n    const executeButton = document.getElementById('execute-query')\n    const clearButton = document.getElementById('clear-result')\n    const resultPre = document.getElementById('query-result')\n\n    if (!queryTextarea || !executeButton) return // Not on playground page\n\n    this.initCodemirror(queryTextarea)\n\n    executeButton.addEventListener('click', function () {\n      const query = queryTextarea.value.trim()\n      rexQL.playground.executeQuery(\n        query,\n        apiKeyInput.value.trim(),\n        resultPre,\n        executeButton\n      )\n    })\n\n    clearButton.addEventListener('click', function () {\n      resultPre.textContent =\n        'Führen Sie eine Query aus, um Ergebnisse zu sehen...'\n    })\n  },\n\n  executeQuery: function (query, apiKey, resultPre, executeButton) {\n    if (!query) {\n      alert('Bitte geben Sie eine GraphQL Query ein.')\n      return\n    }\n\n    resultPre.textContent = 'Führe Query aus...'\n    executeButton.disabled = true\n\n    const requestData = { query: query }\n    const headers = { 'Content-Type': 'application/json' }\n\n    if (apiKey) {\n      headers['X-API-KEY'] = apiKey\n    }\n\n    // Get endpoint URL from data attribute or global variable\n    const endpointUrl =\n      document\n        .querySelector('[data-endpoint-url]')\n        ?.getAttribute('data-endpoint-url') ||\n      window.rexQLEndpointUrl ||\n      '/index.php?rex-api-call=rexql'\n\n    fetch(endpointUrl, {\n      method: 'POST',\n      headers: headers,\n      body: JSON.stringify(requestData)\n    })\n      .then(async (response) => {\n        const data = await response.json()\n        if (!response.ok) {\n          let errorMsg =\n            'HTTP ' + response.status + ': ' + response.statusText + '\\n\\n'\n          if (data.errors && data.errors.length > 0) {\n            errorMsg += 'GraphQL Fehler:\\n'\n            data.errors.forEach((error) => {\n              errorMsg += '• ' + error.message + '\\n'\n            })\n          }\n\n          throw new Error(errorMsg)\n        } else {\n          resultPre.textContent = JSON.stringify(data, null, 2)\n        }\n      })\n      .catch((error) => {\n        resultPre.textContent =\n          'Netzwerkfehler: ' +\n          error.message +\n          '\\n\\nTipps: Stellen Sie sicher, dass:\\n• Der GraphQL Endpoint erreichbar ist\\n• Sie einen gültigen API-Schlüssel eingegeben haben\\n• Die Query syntaktisch korrekt ist'\n      })\n      .finally(() => {\n        executeButton.disabled = false\n      })\n  },\n\n  initCodemirror: async function (textarea) {\n    const lib = await import('./graphql-editor')\n\n    const schemaContainer = document.getElementById('graphql-schema')\n    new lib.GraphQLEditor(schemaContainer, {\n      schema,\n      initialValue: '',\n      height: '600px',\n      readOnly: true,\n      renderSchema: true,\n      onChange: (content) => {\n        textarea.value = content\n      }\n    })\n\n    const container = document.getElementById('graphql-editor')\n    new lib.GraphQLEditor(container, {\n      schema,\n      initialValue: textarea.value || '',\n      height: '400px',\n      onChange: (content) => {\n        textarea.value = content\n      }\n    })\n  }\n}\n","export const copyToClipboard = function (event, text, successMessage) {\n  successMessage = successMessage || 'In Zwischenablage kopiert'\n\n  if (navigator.clipboard && navigator.clipboard.writeText) {\n    navigator.clipboard\n      .writeText(text)\n      .then(function () {\n        // alert(successMessage)\n        showNotification(successMessage, 'success', event.target)\n      })\n      .catch(function () {\n        rexQL.fallbackCopyToClipboard(event, text, successMessage)\n      })\n  } else {\n    rexQL.fallbackCopyToClipboard(event, text, successMessage)\n  }\n}\n\n/**\n * Fallback for older browsers that don't support Clipboard API\n */\nexport const fallbackCopyToClipboard = function (event, text, successMessage) {\n  var textArea = document.createElement('textarea')\n  textArea.value = text\n  textArea.style.position = 'fixed'\n  textArea.style.top = '0'\n  textArea.style.left = '0'\n  textArea.style.width = '2em'\n  textArea.style.height = '2em'\n  textArea.style.padding = '0'\n  textArea.style.border = 'none'\n  textArea.style.outline = 'none'\n  textArea.style.boxShadow = 'none'\n  textArea.style.background = 'transparent'\n\n  document.body.appendChild(textArea)\n  textArea.focus()\n  textArea.select()\n\n  try {\n    var successful = document.execCommand('copy')\n    if (successful) {\n      showNotification(successMessage, 'success', event.target)\n    } else {\n      prompt('Bitte manuell kopieren:', text)\n    }\n  } catch (err) {\n    console.error('Copy to clipboard failed:', err)\n    prompt('Bitte manuell kopieren:', text)\n  }\n\n  document.body.removeChild(textArea)\n}\n\n/**\n * Show a notification message\n */\nexport const showNotification = function (message, type, node) {\n  type = type || 'info'\n\n  // Bootstrap Alert erstellen\n  var alertClass = 'alert-info'\n  if (type === 'success') alertClass = 'alert-success'\n  if (type === 'error') alertClass = 'alert-danger'\n  if (type === 'warning') alertClass = 'alert-warning'\n\n  var alert = document.createElement('div')\n  alert.className =\n    'alert rexql-notificiation ' + alertClass + ' alert-dismissible'\n  alert.innerHTML =\n    '<div><button type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>' +\n    '<strong>' +\n    message +\n    '</strong></div>'\n\n  // Alert am Anfang der Seite einfügen\n  try {\n    var container = document.querySelector('.rex-page-header') || document.body\n    container.appendChild(alert)\n  } catch (err) {\n    console.error('showNotification:', err)\n  }\n\n  // Nach 3 Sekunden automatisch ausblenden\n  setTimeout(function () {\n    if (alert.parentNode) {\n      alert.parentNode.removeChild(alert)\n    }\n  }, 3000)\n}\n","/**\n * Permissions\n */\nexport const permissions = {\n  init: function () {\n    // Handler for \"Select All Core Tables\"\n    const checkboxes = Array.from(\n      document.querySelectorAll('input[type=\"checkbox\"][name=\"permissions[]\"]')\n    )\n    if (checkboxes.length === 0) {\n      console.warn('No checkboxes found for permissions.')\n      return\n    }\n    const checkboxesFiltered = checkboxes.filter(\n      (checkbox) => checkbox.value !== 'read:all'\n    )\n\n    const selectAll = checkboxes[0]\n    if (selectAll) {\n      selectAll.addEventListener('change', function () {\n        checkboxes.forEach((checkbox) => {\n          checkbox.checked = this.checked\n        })\n      })\n\n      checkboxesFiltered.forEach((checkbox) => {\n        checkbox.addEventListener('change', function () {\n          // If any checkbox is unchecked, uncheck \"select all\"\n          if (selectAll && !this.checked) {\n            selectAll.checked = false\n          }\n          // If all checkboxes are checked, check \"select all\"\n          else if (selectAll && checkboxesFiltered.every((cb) => cb.checked)) {\n            selectAll.checked = true\n          }\n        })\n      })\n    }\n\n    // update status when \"select all\" checkbox is toggled\n    const updateSelectAllStatus = () => {\n      if (!selectAll.checked) return\n\n      checkboxesFiltered.forEach((checkbox) => {\n        checkbox.checked = true\n      })\n    }\n\n    // Initial status of \"select all\" checkboxes\n    updateSelectAllStatus()\n  }\n}\n","import { playground } from './playground'\nimport {\n  copyToClipboard,\n  fallbackCopyToClipboard,\n  showNotification\n} from './utilities'\nimport { permissions } from './permissions'\n\n// Globales rexQL Objekt\nwindow.rexQL = window.rexQL || {\n  playground,\n  copyToClipboard,\n  fallbackCopyToClipboard,\n  showNotification,\n  permissions\n}\n\nconsole.log('rexQL Addon rex:ready')\n\n// Initialize copy to clipboard buttons\nvar copyButtons = document.querySelectorAll('[data-copy]')\ncopyButtons.forEach(function (button) {\n  button.addEventListener('click', function (e) {\n    e.preventDefault()\n    var value = this.getAttribute('data-copy')\n    rexQL.copyToClipboard(e, value)\n  })\n})\n\n// Initialize playground if on playground page\nif (window.location.href.indexOf('page=rexql/playground') !== -1) {\n  rexQL.playground.init()\n}\n\n// Initialize permissions if on permissions page\nif (window.location.href.indexOf('page=rexql/permissions&func=edit') !== -1) {\n  rexQL.permissions.init()\n}\n"],"file":"rexql.js"}