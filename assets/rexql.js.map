{"version":3,"file":"rexql.js","sources":["../assets-src/rexql.js"],"sourcesContent":["/**\n * rexQL JavaScript Functions\n */\n\n// Globales rexQL Objekt\nwindow.rexQL = window.rexQL || {}\n\n/**\n * GraphQL Playground funktionalität\n */\nrexQL.playground = {\n  init: function () {\n    console.log('rexQL.playground.init()')\n    const queryTextarea = document.getElementById('graphql-query')\n    const apiKeyInput = document.getElementById('api-key-input')\n    const executeButton = document.getElementById('execute-query')\n    const clearButton = document.getElementById('clear-result')\n    const introspectButton = document.getElementById('introspect')\n    const resultPre = document.getElementById('query-result')\n\n    if (!queryTextarea || !executeButton) return // Nicht auf Playground-Seite\n\n      this.initCodemirror(queryTextarea)\n\n    executeButton.addEventListener('click', function () {\n      const query = queryTextarea.value.trim()\n      rexQL.playground.executeQuery(\n        query,\n        apiKeyInput.value.trim(),\n        resultPre,\n        executeButton,\n        introspectButton\n      )\n    })\n\n    introspectButton.addEventListener('click', function () {\n      const introspectionQuery = `\n{\n  __schema {\n    queryType {\n      name\n      fields {\n        name\n        type {\n          name\n          kind\n        }\n      }\n    }\n  }\n}`\n      rexQL.playground.executeQuery(\n        introspectionQuery,\n        apiKeyInput.value.trim(),\n        resultPre,\n        executeButton,\n        introspectButton\n      )\n    })\n\n    clearButton.addEventListener('click', function () {\n      resultPre.textContent =\n        'Führen Sie eine Query aus, um Ergebnisse zu sehen...'\n    })\n  },\n\n  executeQuery: function (\n    query,\n    apiKey,\n    resultPre,\n    executeButton,\n    introspectButton\n  ) {\n    if (!query) {\n      alert('Bitte geben Sie eine GraphQL Query ein.')\n      return\n    }\n\n    resultPre.textContent = 'Führe Query aus...'\n    executeButton.disabled = true\n    introspectButton.disabled = true\n\n    const requestData = { query: query }\n    const headers = { 'Content-Type': 'application/json' }\n\n    if (apiKey) {\n      headers['X-API-KEY'] = apiKey\n    }\n\n    // Get endpoint URL from data attribute or global variable\n    const endpointUrl =\n      document\n        .querySelector('[data-endpoint-url]')\n        ?.getAttribute('data-endpoint-url') ||\n      window.rexQLEndpointUrl ||\n      '/index.php?rex-api-call=rexql_graphql'\n\n    fetch(endpointUrl, {\n      method: 'POST',\n      headers: headers,\n      body: JSON.stringify(requestData)\n    })\n      .then(async(response) => {\n        const data = await response.json();\n        if (!response.ok) {\n          let errorMsg = 'HTTP ' + response.status + ': ' + response.statusText + '\\n\\n'\n          if (data.errors && data.errors.length > 0) {\n            errorMsg+= 'GraphQL Fehler:\\n'\n            data.errors.forEach((error) => {\n                errorMsg += '• ' + error.message + '\\n'\n            })\n          }\n\n          throw new Error(errorMsg)\n        }  else {\n            resultPre.textContent = JSON.stringify(data, null, 2)\n          }\n      })\n      .catch((error) => {\n        resultPre.textContent =\n          'Netzwerkfehler: ' +\n          error.message +\n          '\\n\\nTipps: Stellen Sie sicher, dass:\\n• Der GraphQL Endpoint erreichbar ist\\n• Sie einen gültigen API-Schlüssel eingegeben haben\\n• Die Query syntaktisch korrekt ist'\n      })\n      .finally(() => {\n        executeButton.disabled = false\n        introspectButton.disabled = false\n      })\n  },\n\n  initCodemirror: function (textarea){\n        var themes = rex.customizer_codemirror_defaulttheme + ',' + rex.customizer_codemirror_defaultdarktheme + ',';\n\n        if (themes != '') {\n            themes = themes.substring(0, themes.length - 1);\n        }\n        if (typeof CodeMirror !== 'function') {\n          // this could better use javascript Promises, but browser support..\n          var cssLoaded = false,\n              scriptLoaded = false;\n          var css = document.createElement('link');\n          css.rel = 'stylesheet';\n          css.href = '?codemirror_output=css&buster=' + rex.customizer_codemirror_cssbuster + '&themes=' + themes;\n\n          document.head.appendChild(css);\n          css.onload = function () {\n            cssLoaded = true;\n            var script = document.createElement('script');\n            script.src = '?rexql_output=codemirror&buster=' + rex.customizer_codemirror_jsbuster;\n            document.head.appendChild(script);\n            script.onload = function () {\n              console.log('CodeMirror script loaded');\n                scriptLoaded = true;\n\n                if (cssLoaded && scriptLoaded) {\n                  var mode = \"graphql\";\n                  var theme = rex.customizer_codemirror_defaulttheme;\n\n                  let systemDarkModeDetector = null;\n                  if (window.matchMedia) {\n                      systemDarkModeDetector = window.matchMedia('(prefers-color-scheme: dark)');\n                      // Systemseitige Einstellung abfragen\n                      if (systemDarkModeDetector.matches) {\n                          theme = rex.customizer_codemirror_defaultdarktheme;\n                      }\n                      // Einstellung aus Profil\n                      if (document.body.classList.contains('rex-theme-light')) {\n                          theme = rex.customizer_codemirror_defaulttheme;\n                      } else if (document.body.classList.contains('rex-theme-dark')) {\n                          theme = rex.customizer_codemirror_defaultdarktheme;\n                      }\n                      // Systemseitiges Umschalten Dark/Light erkennen\n                      systemDarkModeDetector.addEventListener('change', function (e) {\n                          if (systemDarkModeDetector.matches) {\n                              theme = rex.customizer_codemirror_defaultdarktheme;\n                          } else {\n                              theme = rex.customizer_codemirror_defaulttheme;\n                          }\n                          if (document.body.classList.contains('rex-theme-light')) {\n                              theme = rex.customizer_codemirror_defaulttheme;\n                          } else if (document.body.classList.contains('rex-theme-dark')) {\n                              theme = rex.customizer_codemirror_defaultdarktheme;\n                          }\n                          cm_editor[cm].setOption('theme', theme);\n                      });\n                  }\n\n                  \n                  var new_theme = textarea.dataset.codemirrorTheme;\n\n                  if (typeof new_theme !== \"undefined\") {\n                      theme = new_theme;\n                  }\n\n                  if (typeof CodeMirror === \"function\") {\n                      cm_options = {\n                          mode: mode,\n                          theme: theme,\n                          autoRefresh: true,\n                          lineNumbers: true,\n                          lineWrapping: false,\n                          styleActiveLine: true,\n                          matchBrackets: true,\n                          autoCloseBrackets: true,\n                          matchTags: {\n                              bothTags: true\n                          },\n                          tabSize: 4,\n                          indentUnit: 4,\n                          indentWithTabs: false,\n                          smartIndent: true,\n                          enterMode: \"keep\",\n                          tabMode: \"shift\",\n                          gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\"],\n                          foldGutter: true,\n                          extraKeys: {\n                              \"F11\": function (cm) {\n                                  cm.setOption(\"fullScreen\", !cm.getOption(\"fullScreen\"));\n                              },\n                              \"Esc\": function (cm) {\n                                  cm.setOption(\"fullScreen\", !cm.getOption(\"fullScreen\"));\n                              },\n                              \"Tab\": function (cm) {\n                                  if (cm.doc.somethingSelected()) {\n                                      return CodeMirror.Pass;\n                                  }\n                                  if (!cm.getOption(\"indentWithTabs\")) {\n                                      var spacesPerTab = cm.getOption(\"indentUnit\");\n                                      var spacesToInsert = spacesPerTab - (cm.doc.getCursor(\"start\").ch % spacesPerTab);\n                                      var spaces = Array(spacesToInsert + 1).join(\" \");\n                                      cm.replaceSelection(spaces, \"end\", \"+input\");\n                                  } else {\n                                      cm.replaceSelection('\\t', \"end\", \"+input\");\n                                  }\n                              }\n                          }\n                      }\n                      try {\n                          if (rex.customizer_codemirror_options) {\n                              additional_options = jQuery.parseJSON(rex.customizer_codemirror_options);\n                              $.extend(cm_options, additional_options);\n                          }\n                      } catch (e) {\n                          console.log('Error in global Codemirror-Options! \\nOptions: ' + rex.customizer_codemirror_options);\n                          console.log(e);\n                      }\n                      var editor = CodeMirror.fromTextArea(textarea, cm_options);\n                      if(editor) {\n                          editor.on('change', function (cm) {\n                              cm.save();\n                          });\n                          editor.on('focus', function () {\n                              textarea.classList.add('active');\n                          });\n                          editor.on('blur', function () {\n                              textarea.classList.remove('active');\n                          });\n                      }\n                  }\n                }\n            };\n            script.onerror = function () {\n                console.error('CodeMirror script konnte nicht geladen werden.');\n            }\n\n          }\n      \n        }\n        \n\n  }\n}\n\n/**\n * API-Schlüssel in Zwischenablage kopieren - allgemeine Funktion\n */\nrexQL.copyToClipboard = function (text, successMessage) {\n  successMessage = successMessage || 'In Zwischenablage kopiert'\n\n  if (navigator.clipboard && navigator.clipboard.writeText) {\n    navigator.clipboard\n      .writeText(text)\n      .then(function () {\n        alert(successMessage)\n      })\n      .catch(function () {\n        rexQL.fallbackCopyToClipboard(text, successMessage)\n      })\n  } else {\n    rexQL.fallbackCopyToClipboard(text, successMessage)\n  }\n}\n\n/**\n * Fallback für ältere Browser\n */\nrexQL.fallbackCopyToClipboard = function (text, successMessage) {\n  var textArea = document.createElement('textarea')\n  textArea.value = text\n  textArea.style.position = 'fixed'\n  textArea.style.top = '0'\n  textArea.style.left = '0'\n  textArea.style.width = '2em'\n  textArea.style.height = '2em'\n  textArea.style.padding = '0'\n  textArea.style.border = 'none'\n  textArea.style.outline = 'none'\n  textArea.style.boxShadow = 'none'\n  textArea.style.background = 'transparent'\n\n  document.body.appendChild(textArea)\n  textArea.focus()\n  textArea.select()\n\n  try {\n    var successful = document.execCommand('copy')\n    if (successful) {\n      alert(successMessage)\n    } else {\n      prompt('Bitte manuell kopieren:', text)\n    }\n  } catch (err) {\n    prompt('Bitte manuell kopieren:', text)\n  }\n\n  document.body.removeChild(textArea)\n}\n\n/**\n * Legacy-Funktionen für Kompatibilität\n */\nwindow.copyToClipboard = function (text) {\n  if (text.includes('rexql_')) {\n    rexQL.copyToClipboard(text, 'API-Schlüssel in Zwischenablage kopiert')\n  } else {\n    rexQL.copyToClipboard(text, 'URL in Zwischenablage kopiert')\n  }\n}\n\n/**\n * Benachrichtigung anzeigen\n */\nrexQL.showNotification = function (message, type) {\n  type = type || 'info'\n\n  // Bootstrap Alert erstellen\n  var alertClass = 'alert-info'\n  if (type === 'success') alertClass = 'alert-success'\n  if (type === 'error') alertClass = 'alert-danger'\n  if (type === 'warning') alertClass = 'alert-warning'\n\n  var alert = document.createElement('div')\n  alert.className = 'alert ' + alertClass + ' alert-dismissible'\n  alert.innerHTML =\n    '<button type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>' +\n    '<strong>' +\n    message +\n    '</strong>'\n\n  // Alert am Anfang der Seite einfügen\n  var container = document.querySelector('.rex-page-header') || document.body\n  container.insertBefore(alert, container.firstChild)\n\n  // Nach 3 Sekunden automatisch ausblenden\n  setTimeout(function () {\n    if (alert.parentNode) {\n      alert.parentNode.removeChild(alert)\n    }\n  }, 3000)\n}\n\n/**\n * GraphQL Query Formatter\n */\nrexQL.formatGraphQL = function (query) {\n  // Einfache Formatierung - in Produktion würde man eine richtige GraphQL-Bibliothek verwenden\n  return query\n    .replace(/\\s+/g, ' ')\n    .replace(/\\{\\s*/g, '{\\n  ')\n    .replace(/\\s*\\}/g, '\\n}')\n    .replace(/,\\s*/g, ',\\n  ')\n    .trim()\n}\n\n/**\n * GraphQL Query validieren\n */\nrexQL.validateGraphQL = function (query) {\n  // Einfache Validierung\n  var openBraces = (query.match(/\\{/g) || []).length\n  var closeBraces = (query.match(/\\}/g) || []).length\n\n  if (openBraces !== closeBraces) {\n    return 'Unbalanced braces in GraphQL query'\n  }\n\n  if (query.trim().length === 0) {\n    return 'Empty query'\n  }\n\n  return null // Keine Fehler\n}\n\n/**\n * Konfiguration: Table Selection funktionalität\n */\nrexQL.config = {\n  init: function () {\n    // Handler für \"Alle Core-Tabellen auswählen\"\n    const coreSelectAll = document.getElementById('select_all_core_tables')\n    if (coreSelectAll) {\n      coreSelectAll.addEventListener('change', function () {\n        const checkboxes = document.querySelectorAll(\n          '.table-checkbox.core-table'\n        )\n        checkboxes.forEach((checkbox) => {\n          checkbox.checked = this.checked\n        })\n      })\n    }\n\n    // Handler für \"Alle YForm-Tabellen auswählen\" (falls vorhanden)\n    const yformSelectAll = document.getElementById('select_all_yform_tables')\n    if (yformSelectAll) {\n      yformSelectAll.addEventListener('change', function () {\n        const checkboxes = document.querySelectorAll(\n          '.table-checkbox.yform-table'\n        )\n        checkboxes.forEach((checkbox) => {\n          checkbox.checked = this.checked\n        })\n      })\n    }\n\n    // Status der \"Alle auswählen\" Checkboxen aktualisieren\n    const updateSelectAllStatus = (groupSelector, selectAllId) => {\n      const checkboxes = document.querySelectorAll(groupSelector)\n      const selectAll = document.getElementById(selectAllId)\n\n      if (!selectAll) return\n\n      const allChecked = Array.from(checkboxes).every(\n        (checkbox) => checkbox.checked\n      )\n      selectAll.checked = allChecked\n    }\n\n    // Event-Listener für Core-Tabellen\n    const coreCheckboxes = document.querySelectorAll(\n      '.table-checkbox.core-table'\n    )\n    coreCheckboxes.forEach((checkbox) => {\n      checkbox.addEventListener('change', function () {\n        updateSelectAllStatus(\n          '.table-checkbox.core-table',\n          'select_all_core_tables'\n        )\n      })\n    })\n\n    // Event-Listener für YForm-Tabellen\n    const yformCheckboxes = document.querySelectorAll(\n      '.table-checkbox.yform-table'\n    )\n    yformCheckboxes.forEach((checkbox) => {\n      checkbox.addEventListener('change', function () {\n        updateSelectAllStatus(\n          '.table-checkbox.yform-table',\n          'select_all_yform_tables'\n        )\n      })\n    })\n\n    // Initial-Status der \"Alle auswählen\" Checkboxen setzen\n    updateSelectAllStatus(\n      '.table-checkbox.core-table',\n      'select_all_core_tables'\n    )\n    updateSelectAllStatus(\n      '.table-checkbox.yform-table',\n      'select_all_yform_tables'\n    )\n  }\n}\n\n$(document).on('rex:ready', function () {\n  if (window.location.href.indexOf('page=rexql') === -1) return\n\n  console.log('rexQL Addon rex:ready')\n\n  if (typeof copyToClipboard === 'undefined') {\n    window.copyToClipboard = function (text) {\n      if (navigator.clipboard) {\n        navigator.clipboard\n          .writeText(text)\n          .then(function () {\n            // Success feedback could be added here\n          })\n          .catch(function (err) {\n            console.error('Failed to copy text: ', err)\n          })\n      } else {\n        // Fallback for older browsers\n        const textArea = document.createElement('textarea')\n        textArea.value = text\n        document.body.appendChild(textArea)\n        textArea.select()\n        try {\n          document.execCommand('copy')\n        } catch (err) {\n          console.error('Failed to copy text: ', err)\n        }\n        document.body.removeChild(textArea)\n      }\n    }\n  }\n\n  // Syntax-Highlighting für Code-Blöcke (einfach)\n  var codeBlocks = document.querySelectorAll('pre code')\n  codeBlocks.forEach(function (block) {\n    if (block.textContent.trim().startsWith('{')) {\n      block.classList.add('language-graphql')\n    }\n  })\n\n  // API-Schlüssel Copy-Buttons initialisieren\n  var copyButtons = document.querySelectorAll('[data-copy]')\n  copyButtons.forEach(function (button) {\n    button.addEventListener('click', function (e) {\n      e.preventDefault()\n      var value = this.getAttribute('data-copy')\n      rexQL.copyToClipboard(value)\n    })\n  })\n\n  // Playground initialisieren (falls vorhanden)\n  if (window.location.href.indexOf('page=rexql/playground') !== -1) {\n    rexQL.playground.init()\n  }\n\n  // Konfiguration initialisieren (falls vorhanden) \n  if (window.location.href.indexOf('page=rexql/config') !== -1) {\n    rexQL.config.init()\n  }\n})\n"],"names":["queryTextarea","apiKeyInput","executeButton","clearButton","introspectButton","resultPre","query","apiKey","_a","requestData","headers","endpointUrl","response","data","errorMsg","error","textarea","themes","cssLoaded","scriptLoaded","css","script","mode","theme","systemDarkModeDetector","e","new_theme","cm","spacesPerTab","spacesToInsert","spaces","editor","text","successMessage","textArea","successful","err","message","type","alertClass","alert","container","openBraces","closeBraces","coreSelectAll","checkbox","yformSelectAll","updateSelectAllStatus","groupSelector","selectAllId","checkboxes","selectAll","allChecked","codeBlocks","block","copyButtons","button","value"],"mappings":"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"}