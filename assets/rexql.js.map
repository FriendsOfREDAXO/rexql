{"version":3,"file":"rexql.js","sources":["../assets-src/rexql.js","../assets-src/main.js"],"sourcesContent":["/**\n * rexQL JavaScript Functions\n */\n\n// Globales rexQL Objekt\nwindow.rexQL = window.rexQL || {}\n\n/**\n * GraphQL Playground funktionalität\n */\nrexQL.playground = {\n  init: function () {\n    const queryTextarea = document.getElementById('graphql-query')\n    const apiKeyInput = document.getElementById('api-key-input')\n    const executeButton = document.getElementById('execute-query')\n    const clearButton = document.getElementById('clear-result')\n    const introspectButton = document.getElementById('introspect')\n    const resultPre = document.getElementById('query-result')\n\n    if (!queryTextarea || !executeButton) return // Nicht auf Playground-Seite\n\n    executeButton.addEventListener('click', function () {\n      const query = queryTextarea.value.trim()\n      rexQL.playground.executeQuery(\n        query,\n        apiKeyInput.value.trim(),\n        resultPre,\n        executeButton,\n        introspectButton\n      )\n    })\n\n    introspectButton.addEventListener('click', function () {\n      const introspectionQuery = `\n{\n  __schema {\n    queryType {\n      name\n      fields {\n        name\n        type {\n          name\n          kind\n        }\n      }\n    }\n  }\n}`\n      rexQL.playground.executeQuery(\n        introspectionQuery,\n        apiKeyInput.value.trim(),\n        resultPre,\n        executeButton,\n        introspectButton\n      )\n    })\n\n    clearButton.addEventListener('click', function () {\n      resultPre.textContent =\n        'Führen Sie eine Query aus, um Ergebnisse zu sehen...'\n    })\n  },\n\n  executeQuery: function (\n    query,\n    apiKey,\n    resultPre,\n    executeButton,\n    introspectButton\n  ) {\n    if (!query) {\n      alert('Bitte geben Sie eine GraphQL Query ein.')\n      return\n    }\n\n    resultPre.textContent = 'Führe Query aus...'\n    executeButton.disabled = true\n    introspectButton.disabled = true\n\n    const requestData = { query: query }\n    const headers = { 'Content-Type': 'application/json' }\n\n    if (apiKey) {\n      headers['X-API-KEY'] = apiKey\n    }\n\n    // Get endpoint URL from data attribute or global variable\n    const endpointUrl =\n      document\n        .querySelector('[data-endpoint-url]')\n        ?.getAttribute('data-endpoint-url') ||\n      window.rexQLEndpointUrl ||\n      '/api/graphql'\n\n    fetch(endpointUrl, {\n      method: 'POST',\n      headers: headers,\n      body: JSON.stringify(requestData)\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\n            'HTTP ' + response.status + ': ' + response.statusText\n          )\n        }\n        return response.json()\n      })\n      .then((data) => {\n        if (data.errors && data.errors.length > 0) {\n          let errorMsg = 'GraphQL Fehler:\\n'\n          data.errors.forEach((error) => {\n            if (error.message.includes('API-Schlüssel erforderlich')) {\n              errorMsg +=\n                '• Authentifizierung erforderlich: Bitte geben Sie einen gültigen API-Schlüssel ein.\\n'\n            } else if (error.message.includes('invalid_api_key')) {\n              errorMsg +=\n                '• Ungültiger API-Schlüssel: Überprüfen Sie Ihren API-Schlüssel.\\n'\n            } else {\n              errorMsg += '• ' + error.message + '\\n'\n            }\n          })\n\n          resultPre.textContent = JSON.stringify(\n            {\n              data: data.data,\n              errors: data.errors,\n              info: errorMsg\n            },\n            null,\n            2\n          )\n        } else {\n          resultPre.textContent = JSON.stringify(data, null, 2)\n        }\n      })\n      .catch((error) => {\n        resultPre.textContent =\n          'Netzwerkfehler: ' +\n          error.message +\n          '\\n\\nStellen Sie sicher, dass:\\n• Der GraphQL Endpoint erreichbar ist\\n• Sie einen gültigen API-Schlüssel eingegeben haben\\n• Die Query syntaktisch korrekt ist'\n      })\n      .finally(() => {\n        executeButton.disabled = false\n        introspectButton.disabled = false\n      })\n  }\n}\n\n/**\n * API-Schlüssel in Zwischenablage kopieren - allgemeine Funktion\n */\nrexQL.copyToClipboard = function (text, successMessage) {\n  successMessage = successMessage || 'In Zwischenablage kopiert'\n\n  if (navigator.clipboard && navigator.clipboard.writeText) {\n    navigator.clipboard\n      .writeText(text)\n      .then(function () {\n        alert(successMessage)\n      })\n      .catch(function () {\n        rexQL.fallbackCopyToClipboard(text, successMessage)\n      })\n  } else {\n    rexQL.fallbackCopyToClipboard(text, successMessage)\n  }\n}\n\n/**\n * Fallback für ältere Browser\n */\nrexQL.fallbackCopyToClipboard = function (text, successMessage) {\n  var textArea = document.createElement('textarea')\n  textArea.value = text\n  textArea.style.position = 'fixed'\n  textArea.style.top = '0'\n  textArea.style.left = '0'\n  textArea.style.width = '2em'\n  textArea.style.height = '2em'\n  textArea.style.padding = '0'\n  textArea.style.border = 'none'\n  textArea.style.outline = 'none'\n  textArea.style.boxShadow = 'none'\n  textArea.style.background = 'transparent'\n\n  document.body.appendChild(textArea)\n  textArea.focus()\n  textArea.select()\n\n  try {\n    var successful = document.execCommand('copy')\n    if (successful) {\n      alert(successMessage)\n    } else {\n      prompt('Bitte manuell kopieren:', text)\n    }\n  } catch (err) {\n    prompt('Bitte manuell kopieren:', text)\n  }\n\n  document.body.removeChild(textArea)\n}\n\n/**\n * Legacy-Funktionen für Kompatibilität\n */\nwindow.copyToClipboard = function (text) {\n  if (text.includes('rexql_')) {\n    rexQL.copyToClipboard(text, 'API-Schlüssel in Zwischenablage kopiert')\n  } else {\n    rexQL.copyToClipboard(text, 'URL in Zwischenablage kopiert')\n  }\n}\n\n/**\n * Benachrichtigung anzeigen\n */\nrexQL.showNotification = function (message, type) {\n  type = type || 'info'\n\n  // Bootstrap Alert erstellen\n  var alertClass = 'alert-info'\n  if (type === 'success') alertClass = 'alert-success'\n  if (type === 'error') alertClass = 'alert-danger'\n  if (type === 'warning') alertClass = 'alert-warning'\n\n  var alert = document.createElement('div')\n  alert.className = 'alert ' + alertClass + ' alert-dismissible'\n  alert.innerHTML =\n    '<button type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>' +\n    '<strong>' +\n    message +\n    '</strong>'\n\n  // Alert am Anfang der Seite einfügen\n  var container = document.querySelector('.rex-page-header') || document.body\n  container.insertBefore(alert, container.firstChild)\n\n  // Nach 3 Sekunden automatisch ausblenden\n  setTimeout(function () {\n    if (alert.parentNode) {\n      alert.parentNode.removeChild(alert)\n    }\n  }, 3000)\n}\n\n/**\n * GraphQL Query Formatter\n */\nrexQL.formatGraphQL = function (query) {\n  // Einfache Formatierung - in Produktion würde man eine richtige GraphQL-Bibliothek verwenden\n  return query\n    .replace(/\\s+/g, ' ')\n    .replace(/\\{\\s*/g, '{\\n  ')\n    .replace(/\\s*\\}/g, '\\n}')\n    .replace(/,\\s*/g, ',\\n  ')\n    .trim()\n}\n\n/**\n * GraphQL Query validieren\n */\nrexQL.validateGraphQL = function (query) {\n  // Einfache Validierung\n  var openBraces = (query.match(/\\{/g) || []).length\n  var closeBraces = (query.match(/\\}/g) || []).length\n\n  if (openBraces !== closeBraces) {\n    return 'Unbalanced braces in GraphQL query'\n  }\n\n  if (query.trim().length === 0) {\n    return 'Empty query'\n  }\n\n  return null // Keine Fehler\n}\n\n/**\n * Query-Statistiken aktualisieren\n */\nrexQL.updateStats = function () {\n  // AJAX-Request zu einer Stats-API (falls implementiert)\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', window.location.href + '&ajax=stats', true)\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState === 4 && xhr.status === 200) {\n      try {\n        var stats = JSON.parse(xhr.responseText)\n        rexQL.displayStats(stats)\n      } catch (e) {\n        console.error('Error parsing stats:', e)\n      }\n    }\n  }\n  xhr.send()\n}\n\n/**\n * Statistiken anzeigen\n */\nrexQL.displayStats = function (stats) {\n  var containers = {\n    total_queries: document.getElementById('stat-total-queries'),\n    success_rate: document.getElementById('stat-success-rate'),\n    avg_execution_time: document.getElementById('stat-avg-time'),\n    avg_memory_usage: document.getElementById('stat-avg-memory')\n  }\n\n  for (var key in containers) {\n    if (containers[key] && stats[key] !== undefined) {\n      containers[key].textContent = stats[key]\n    }\n  }\n}\n\n/**\n * Konfiguration: Table Selection funktionalität\n */\nrexQL.config = {\n  init: function () {\n    // Handler für \"Alle Core-Tabellen auswählen\"\n    const coreSelectAll = document.getElementById('select_all_core_tables')\n    if (coreSelectAll) {\n      coreSelectAll.addEventListener('change', function () {\n        const checkboxes = document.querySelectorAll(\n          '.table-checkbox.core-table'\n        )\n        checkboxes.forEach((checkbox) => {\n          checkbox.checked = this.checked\n        })\n      })\n    }\n\n    // Handler für \"Alle YForm-Tabellen auswählen\" (falls vorhanden)\n    const yformSelectAll = document.getElementById('select_all_yform_tables')\n    if (yformSelectAll) {\n      yformSelectAll.addEventListener('change', function () {\n        const checkboxes = document.querySelectorAll(\n          '.table-checkbox.yform-table'\n        )\n        checkboxes.forEach((checkbox) => {\n          checkbox.checked = this.checked\n        })\n      })\n    }\n\n    // Status der \"Alle auswählen\" Checkboxen aktualisieren\n    const updateSelectAllStatus = (groupSelector, selectAllId) => {\n      const checkboxes = document.querySelectorAll(groupSelector)\n      const selectAll = document.getElementById(selectAllId)\n\n      if (!selectAll) return\n\n      const allChecked = Array.from(checkboxes).every(\n        (checkbox) => checkbox.checked\n      )\n      selectAll.checked = allChecked\n    }\n\n    // Event-Listener für Core-Tabellen\n    const coreCheckboxes = document.querySelectorAll(\n      '.table-checkbox.core-table'\n    )\n    coreCheckboxes.forEach((checkbox) => {\n      checkbox.addEventListener('change', function () {\n        updateSelectAllStatus(\n          '.table-checkbox.core-table',\n          'select_all_core_tables'\n        )\n      })\n    })\n\n    // Event-Listener für YForm-Tabellen\n    const yformCheckboxes = document.querySelectorAll(\n      '.table-checkbox.yform-table'\n    )\n    yformCheckboxes.forEach((checkbox) => {\n      checkbox.addEventListener('change', function () {\n        updateSelectAllStatus(\n          '.table-checkbox.yform-table',\n          'select_all_yform_tables'\n        )\n      })\n    })\n\n    // Initial-Status der \"Alle auswählen\" Checkboxen setzen\n    updateSelectAllStatus(\n      '.table-checkbox.core-table',\n      'select_all_core_tables'\n    )\n    updateSelectAllStatus(\n      '.table-checkbox.yform-table',\n      'select_all_yform_tables'\n    )\n  }\n}\n\n/**\n * Initialisierung nach DOM-Load\n */\ndocument.addEventListener('DOMContentLoaded', function () {\n  // Syntax-Highlighting für Code-Blöcke (einfach)\n  var codeBlocks = document.querySelectorAll('pre code')\n  codeBlocks.forEach(function (block) {\n    if (block.textContent.trim().startsWith('{')) {\n      block.classList.add('language-graphql')\n    }\n  })\n\n  // Automatische Stats-Aktualisierung alle 30 Sekunden auf der Config-Seite\n  if (window.location.href.indexOf('page=rexql/config') !== -1) {\n    setInterval(rexQL.updateStats, 30000)\n  }\n\n  // API-Schlüssel Copy-Buttons initialisieren\n  var copyButtons = document.querySelectorAll('[data-copy-api-key]')\n  copyButtons.forEach(function (button) {\n    button.addEventListener('click', function (e) {\n      e.preventDefault()\n      var apiKey = this.getAttribute('data-copy-api-key')\n      rexQL.copyToClipboard(apiKey)\n    })\n  })\n\n  // Playground initialisieren (falls vorhanden)\n  if (window.location.href.indexOf('page=rexql/playground') !== -1) {\n    rexQL.playground.init()\n  }\n\n  // Konfiguration initialisieren (falls vorhanden)\n  if (window.location.href.indexOf('page=rexql/config') !== -1) {\n    rexQL.config.init()\n  }\n})\n\n/**\n * jQuery Integration (falls jQuery verfügbar ist)\n */\nif (typeof jQuery !== 'undefined') {\n  jQuery(document).ready(function ($) {\n    // Rex:ready Event für REDAXO-spezifische Initialisierung\n    $(document).on('rex:ready', function () {\n      // Custom REDAXO-spezifische Initialisierung hier\n      console.log('rexQL: REDAXO backend ready')\n    })\n  })\n}\n","/**\n * Main entry point for rexQL assets\n * This file is used by Vite to build all assets\n */\n\n// Import CSS\nimport './rexql.css'\n\n// Import and initialize main rexQL functionality\nimport './rexql.js'\n\n// Initialize rexQL on DOM ready\ndocument.addEventListener('DOMContentLoaded', function () {\n  // Initialize rexQL playground if on playground page\n  if (typeof rexQL !== 'undefined' && rexQL.playground) {\n    rexQL.playground.init()\n  }\n\n  // Initialize permissions page functionality if present\n  if (typeof rexQL !== 'undefined' && rexQL.permissions) {\n    rexQL.permissions.init()\n  }\n\n  // Initialize copy to clipboard functionality\n  if (typeof copyToClipboard === 'undefined') {\n    window.copyToClipboard = function (text) {\n      if (navigator.clipboard) {\n        navigator.clipboard\n          .writeText(text)\n          .then(function () {\n            // Success feedback could be added here\n          })\n          .catch(function (err) {\n            console.error('Failed to copy text: ', err)\n          })\n      } else {\n        // Fallback for older browsers\n        const textArea = document.createElement('textarea')\n        textArea.value = text\n        document.body.appendChild(textArea)\n        textArea.select()\n        try {\n          document.execCommand('copy')\n        } catch (err) {\n          console.error('Failed to copy text: ', err)\n        }\n        document.body.removeChild(textArea)\n      }\n    }\n  }\n})\n"],"names":["queryTextarea","apiKeyInput","executeButton","clearButton","introspectButton","resultPre","query","apiKey","_a","requestData","headers","endpointUrl","response","data","errorMsg","error","text","successMessage","textArea","successful","err","message","type","alertClass","alert","container","openBraces","closeBraces","xhr","stats","containers","key","coreSelectAll","checkbox","yformSelectAll","updateSelectAllStatus","groupSelector","selectAllId","checkboxes","selectAll","allChecked","codeBlocks","block","copyButtons","button","e","$"],"mappings":"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"}